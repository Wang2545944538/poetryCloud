name: Build and Deploy Backend and Frontend

on:
  push:
    branches:
      - main

jobs:
  # 后端构建与部署
  backend:
    runs-on: ubuntu-latest

    steps:
      # Checkout代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 JDK
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          
      # 构建后端项目
      - name: Build backend project
        working-directory: ${{ github.workspace }}/backend
        run: mvn clean package

      # 上传后端JAR到服务器
      - name: Upload backend JAR to server
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # 使用 GitHub Secrets 中的私钥
          port: 22
          source: "${{ github.workspace }}/backend/target/back-0.0.1-SNAPSHOT.jar"
          target: "/var/www/backend"  # 上传到服务器上的目标路径

      # 执行启动后端服务
      - name: Run backend service
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # 使用 GitHub Secrets 中的私钥
          port: 22
          script: |
            # 查找占用 5180 端口的进程，并杀掉它（如果存在）
            PID=$(lsof -t -i:5180)
            if [ -n "$PID" ]; then
              echo "Killing process on port 5180 (PID: $PID)"
              kill -9 $PID
            fi
            
            # 移动 JAR 文件到当前目录
            mv /var/www/backend/github/workspace/backend/target/back-0.0.1-SNAPSHOT.jar /var/www/backend/
            
            # 切换到后端目录
            cd /var/www/backend
            # 启动后端服务
            nohup java -jar back-0.0.1-SNAPSHOT.jar --server.port=5180 --server.address=0.0.0.0 > /var/log/backend.log 2>&1 &
            echo "Backend service started."

  # 前端构建与部署
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 构建 frontend-user
      - name: Install dependencies (frontend-user)
        working-directory: ${{ github.workspace }}/frontend-user
        run: npm install --registry=https://registry.npmmirror.com

      - name: Build project (frontend-user)
        working-directory: ${{ github.workspace }}/frontend-user
        run: npm run build

      - name: Upload frontend-user to server
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "${{ github.workspace }}/frontend-user/dist/*"
          target: "/var/www/html/user"

      # 构建 frontend-admin
      - name: Install dependencies (frontend-admin)
        working-directory: ${{ github.workspace }}/frontend-admin
        run: npm install --registry=https://registry.npmmirror.com

      - name: Build project (frontend-admin)
        working-directory: ${{ github.workspace }}/frontend-admin
        run: npm run build

      - name: Upload frontend-admin to server
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "${{ github.workspace }}/frontend-admin/dist/*"
          target: "/var/www/html/admin"

      # 执行命令复制文件并统一重载 Nginx
      - name: Copy frontend-user and frontend-admin files, then restart Nginx
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 复制 frontend-user 文件到最终目录
            cp -r /var/www/html/user/github/workspace/frontend-user/dist/* /var/www/html/user/
            # 复制 frontend-admin 文件到最终目录
            cp -r /var/www/html/admin/github/workspace/frontend-admin/dist/* /var/www/html/admin/
            # 重载 Nginx 使更改生效
            sudo nginx -s reload
